"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var addons_1 = __importDefault(require("@storybook/addons"));
var constants_1 = require("../constants");
var shared_1 = require("../shared");
var shared_2 = require("./shared");
exports.ThemeDecorator = function (props) {
    var children = props.children, config = props.config, store = props.store;
    var Decorator = config.Decorator, list = config.list;
    var channel = addons_1.default.getChannel();
    var _a = react_1.useState(store.get('theme')), storeTheme = _a[0], setTheme = _a[1];
    var themeName = storeTheme || shared_1.getSelectedThemeName(list);
    var theme = shared_1.getSelectedTheme(list, themeName);
    var themeClasses = shared_2.getHtmlClasses(theme);
    react_1.useEffect(function () {
        return store.subscribe(function (key, value) {
            if (key === 'theme') {
                setTheme(value);
            }
        });
    }, []);
    react_1.useEffect(function () {
        var updateStore = function (theme) { return store.set('theme', theme); };
        channel.on(constants_1.CHANGE, updateStore);
        return function () { return channel.removeListener(constants_1.CHANGE, updateStore); };
    }, [store]);
    react_1.useEffect(function () {
        channel.emit(constants_1.THEME, themeName);
    }, [themeName]);
    if (Decorator) {
        return (react_1.default.createElement(Decorator, { theme: theme, themes: list, themeClasses: themeClasses, themeName: themeName }, children));
    }
    return (react_1.default.createElement("div", { className: themeClasses }, children));
};
