var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { html, customElement, LitElement } from 'lit-element';
import FloatButtonScss from './floatbutton-css';
let OrxeFloatButton = class OrxeFloatButton extends LitElement {
    firstUpdated() {
        let slot = this.shadowRoot.querySelector('slot').assignedNodes()[0].parentNode.childNodes;
        const maxArray = [];
        for (let i = 0; i < slot.length; i++) {
            if (slot[i].nodeName === 'ORXE-BUTTON') {
                maxArray.push(slot[i].offsetWidth);
            }
        }
        let max_of_array = Math.max.apply(Math, maxArray);
        for (let i = 0; i < slot.length; i++) {
            if (slot[i].nodeName === 'ORXE-BUTTON') {
                slot[i].style.width = max_of_array.toString() + "px";
            }
        }
    }
    render() {
        return html `
      <div class="float-button-container ">
        <slot></slot>
      </div>
    `;
    }
};
OrxeFloatButton.styles = FloatButtonScss;
OrxeFloatButton = __decorate([
    customElement('orxe-float-button')
], OrxeFloatButton);
export default OrxeFloatButton;
